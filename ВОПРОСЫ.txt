Пытался содержимое папки /components/ оформить отдельным модулем "main", но в этом случае приложение жестоко виснет (браузер виснет)...
Я вынес этот вариант в отдельную ветку (branch) в репозитарии - "module-main-err"
Почему виснет и как это вылечить?


-------------
Почему выдается предупреждение:
    /src/app/components/mail-item/mail-item.component.ts
    19:82 export 'ILetter' was not found in '../../shared/letter'


-------------
Чтобы при каждом клике по п/я не обращаться к серверу, при вызове MailboxesService.getAll() сохраняю массив п/я
в свойстве класса MailboxesService и далее при необходимости вычислении ID п/я беру значение из этого массива -
MailboxesService.getMailboxId()
Правильное ли решение? Может, нужно всякий раз запрашивать сервер?


-------------
При удалении письма из формы редактирования (mail-edit) я:
    - взвожу специальный флаг (LettersService.flagRefresh = true)
    - посылаю на сервер запрос на удаление
    - перехожу в список писем
    - если flagRefresh === true перечитываю с сервера список писем
Нормально так делать?


-------------
UserEditComponent - все ли тут верно сделано? Возможно ли сделать правильнее?



-------------
Чтобы установить фокус на INPUT сделал так:
    el: HTMLElement = this.elementRef.nativeElement.querySelector('input.pass') as HTMLElement;
Это так и делается или есть более правильные методы?


------------- !!!
    На занятии от 12.01.17 на 18-ой минуте был вопрос про взаимодействие компонент из разных модулей, в ответе среди прочего,
на примере HTTP сервиса, было сказано что по хорошему HTTP сервис нужно прописывать в каждом модуле. Это правило касается
любых сервисов, которыми пользуются разные модули/комоненты? Т.е. нужно каждый модуль содержал в себе весь набор сервисов
которыми он будет пользоваться и таким образом каждый модуль должен быть полностью самодостаточен?
    А если есть сервис в котором содержатся данные, которые могут изменять разные модули/компоненты и эти изменения должны
быть видны всем?
